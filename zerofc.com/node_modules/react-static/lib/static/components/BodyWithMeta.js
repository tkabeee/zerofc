"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeBodyWithMeta = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _utils = require("../../utils");

var REGEX_FOR_SCRIPT = /<(\/)?(script)/gi;

var generateRouteInformation = function generateRouteInformation(embeddedRouteInfo) {
  return {
    __html: "\n    window.__routeInfo = ".concat(JSON.stringify(embeddedRouteInfo).replace(REGEX_FOR_SCRIPT, '<"+"$1$2'), ";")
  };
}; // Not only do we pass react-helmet attributes and the app.js here, but
// we also need to  hard code site props and route props into the page to
// prevent flashing when react mounts onto the HTML.


var makeBodyWithMeta =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(state) {
    var head, route, embeddedRouteInfo, _state$clientScripts, clientScripts;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            head = state.head, route = state.route, embeddedRouteInfo = state.embeddedRouteInfo, _state$clientScripts = state.clientScripts, clientScripts = _state$clientScripts === void 0 ? [] : _state$clientScripts; // This embeddedRouteInfo will be inlined into the HTML for this route.
            // It should only include the full props, not the partials.

            return _context.abrupt("return", function (_ref2) {
              var children = _ref2.children,
                  rest = (0, _objectWithoutProperties2.default)(_ref2, ["children"]);
              return _react.default.createElement("body", (0, _extends2.default)({}, head.bodyProps, rest), children, !route.redirect ? _react.default.createElement("script", {
                type: "text/javascript",
                dangerouslySetInnerHTML: generateRouteInformation(embeddedRouteInfo)
              }) : null, !route.redirect ? clientScripts.map(function (script) {
                return _react.default.createElement("script", {
                  key: script,
                  defer: true,
                  type: "text/javascript",
                  src: (0, _utils.makePathAbsolute)((0, _utils.pathJoin)(process.env.REACT_STATIC_ASSETS_PATH, script))
                });
              }) : null);
            });

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function makeBodyWithMeta(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.makeBodyWithMeta = makeBodyWithMeta;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGF0aWMvY29tcG9uZW50cy9Cb2R5V2l0aE1ldGEuanMiXSwibmFtZXMiOlsiUkVHRVhfRk9SX1NDUklQVCIsImdlbmVyYXRlUm91dGVJbmZvcm1hdGlvbiIsImVtYmVkZGVkUm91dGVJbmZvIiwiX19odG1sIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlcGxhY2UiLCJtYWtlQm9keVdpdGhNZXRhIiwic3RhdGUiLCJoZWFkIiwicm91dGUiLCJjbGllbnRTY3JpcHRzIiwiY2hpbGRyZW4iLCJyZXN0IiwiYm9keVByb3BzIiwicmVkaXJlY3QiLCJtYXAiLCJzY3JpcHQiLCJwcm9jZXNzIiwiZW52IiwiUkVBQ1RfU1RBVElDX0FTU0VUU19QQVRIIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLGdCQUFnQixHQUFHLGtCQUF6Qjs7QUFFQSxJQUFNQyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQTJCLENBQUFDLGlCQUFpQjtBQUFBLFNBQUs7QUFDckRDLElBQUFBLE1BQU0sdUNBQ21CQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsaUJBQWYsRUFBa0NJLE9BQWxDLENBQ3JCTixnQkFEcUIsRUFFckIsVUFGcUIsQ0FEbkI7QUFEK0MsR0FBTDtBQUFBLENBQWxELEMsQ0FRQTtBQUNBO0FBQ0E7OztBQUNPLElBQU1PLGdCQUFnQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNEJBQUcsaUJBQU1DLEtBQU47QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN0QkMsWUFBQUEsSUFEc0IsR0FDaUNELEtBRGpDLENBQ3RCQyxJQURzQixFQUNoQkMsS0FEZ0IsR0FDaUNGLEtBRGpDLENBQ2hCRSxLQURnQixFQUNUUixpQkFEUyxHQUNpQ00sS0FEakMsQ0FDVE4saUJBRFMseUJBQ2lDTSxLQURqQyxDQUNVRyxhQURWLEVBQ1VBLGFBRFYscUNBQzBCLEVBRDFCLHlCQUc5QjtBQUNBOztBQUo4Qiw2Q0FNdkI7QUFBQSxrQkFBR0MsUUFBSCxTQUFHQSxRQUFIO0FBQUEsa0JBQWdCQyxJQUFoQjtBQUFBLHFCQUNMLGdFQUFVSixJQUFJLENBQUNLLFNBQWYsRUFBOEJELElBQTlCLEdBQ0dELFFBREgsRUFFRyxDQUFDRixLQUFLLENBQUNLLFFBQVAsR0FDQztBQUNFLGdCQUFBLElBQUksRUFBQyxpQkFEUDtBQUVFLGdCQUFBLHVCQUF1QixFQUFFZCx3QkFBd0IsQ0FBQ0MsaUJBQUQ7QUFGbkQsZ0JBREQsR0FLRyxJQVBOLEVBUUcsQ0FBQ1EsS0FBSyxDQUFDSyxRQUFQLEdBQ0dKLGFBQWEsQ0FBQ0ssR0FBZCxDQUFrQixVQUFBQyxNQUFNO0FBQUEsdUJBQ3RCO0FBQ0Usa0JBQUEsR0FBRyxFQUFFQSxNQURQO0FBRUUsa0JBQUEsS0FBSyxNQUZQO0FBR0Usa0JBQUEsSUFBSSxFQUFDLGlCQUhQO0FBSUUsa0JBQUEsR0FBRyxFQUFFLDZCQUNILHFCQUFTQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsd0JBQXJCLEVBQStDSCxNQUEvQyxDQURHO0FBSlAsa0JBRHNCO0FBQUEsZUFBeEIsQ0FESCxHQVdHLElBbkJOLENBREs7QUFBQSxhQU51Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFoQlYsZ0JBQWdCO0FBQUE7QUFBQTtBQUFBLEdBQXRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcGF0aEpvaW4sIG1ha2VQYXRoQWJzb2x1dGUgfSBmcm9tICcuLi8uLi91dGlscydcblxuY29uc3QgUkVHRVhfRk9SX1NDUklQVCA9IC88KFxcLyk/KHNjcmlwdCkvZ2lcblxuY29uc3QgZ2VuZXJhdGVSb3V0ZUluZm9ybWF0aW9uID0gZW1iZWRkZWRSb3V0ZUluZm8gPT4gKHtcbiAgX19odG1sOiBgXG4gICAgd2luZG93Ll9fcm91dGVJbmZvID0gJHtKU09OLnN0cmluZ2lmeShlbWJlZGRlZFJvdXRlSW5mbykucmVwbGFjZShcbiAgICAgIFJFR0VYX0ZPUl9TQ1JJUFQsXG4gICAgICAnPFwiK1wiJDEkMidcbiAgICApfTtgLFxufSlcblxuLy8gTm90IG9ubHkgZG8gd2UgcGFzcyByZWFjdC1oZWxtZXQgYXR0cmlidXRlcyBhbmQgdGhlIGFwcC5qcyBoZXJlLCBidXRcbi8vIHdlIGFsc28gbmVlZCB0byAgaGFyZCBjb2RlIHNpdGUgcHJvcHMgYW5kIHJvdXRlIHByb3BzIGludG8gdGhlIHBhZ2UgdG9cbi8vIHByZXZlbnQgZmxhc2hpbmcgd2hlbiByZWFjdCBtb3VudHMgb250byB0aGUgSFRNTC5cbmV4cG9ydCBjb25zdCBtYWtlQm9keVdpdGhNZXRhID0gYXN5bmMgc3RhdGUgPT4ge1xuICBjb25zdCB7IGhlYWQsIHJvdXRlLCBlbWJlZGRlZFJvdXRlSW5mbywgY2xpZW50U2NyaXB0cyA9IFtdIH0gPSBzdGF0ZVxuXG4gIC8vIFRoaXMgZW1iZWRkZWRSb3V0ZUluZm8gd2lsbCBiZSBpbmxpbmVkIGludG8gdGhlIEhUTUwgZm9yIHRoaXMgcm91dGUuXG4gIC8vIEl0IHNob3VsZCBvbmx5IGluY2x1ZGUgdGhlIGZ1bGwgcHJvcHMsIG5vdCB0aGUgcGFydGlhbHMuXG5cbiAgcmV0dXJuICh7IGNoaWxkcmVuLCAuLi5yZXN0IH0pID0+IChcbiAgICA8Ym9keSB7Li4uaGVhZC5ib2R5UHJvcHN9IHsuLi5yZXN0fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICAgIHshcm91dGUucmVkaXJlY3QgPyAoXG4gICAgICAgIDxzY3JpcHRcbiAgICAgICAgICB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCJcbiAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17Z2VuZXJhdGVSb3V0ZUluZm9ybWF0aW9uKGVtYmVkZGVkUm91dGVJbmZvKX1cbiAgICAgICAgLz5cbiAgICAgICkgOiBudWxsfVxuICAgICAgeyFyb3V0ZS5yZWRpcmVjdFxuICAgICAgICA/IGNsaWVudFNjcmlwdHMubWFwKHNjcmlwdCA9PiAoXG4gICAgICAgICAgICA8c2NyaXB0XG4gICAgICAgICAgICAgIGtleT17c2NyaXB0fVxuICAgICAgICAgICAgICBkZWZlclxuICAgICAgICAgICAgICB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCJcbiAgICAgICAgICAgICAgc3JjPXttYWtlUGF0aEFic29sdXRlKFxuICAgICAgICAgICAgICAgIHBhdGhKb2luKHByb2Nlc3MuZW52LlJFQUNUX1NUQVRJQ19BU1NFVFNfUEFUSCwgc2NyaXB0KVxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApKVxuICAgICAgICA6IG51bGx9XG4gICAgPC9ib2R5PlxuICApXG59XG4iXX0=