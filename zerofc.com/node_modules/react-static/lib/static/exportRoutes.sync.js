"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _path = _interopRequireDefault(require("path"));

var _RootComponents = require("./components/RootComponents");

var _utils = require("../utils");

var _exportRoute = _interopRequireDefault(require("./exportRoute"));

/* eslint-disable import/first, import/no-dynamic-require */
var _require = require('../utils/binHelper'),
    setIgnorePath = _require.setIgnorePath;

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee2(state) {
    var config, routes, htmlProgress, Comp, DocumentTemplate, tasks, _loop, i;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            config = state.config, routes = state.routes;
            htmlProgress = (0, _utils.progress)(routes.length); // Use the node version of the app created with webpack

            setIgnorePath(config.paths.ARTIFACTS);
            Comp = require(_path.default.resolve(config.paths.ARTIFACTS, 'static-app.js')).default; // Retrieve the document template

            DocumentTemplate = config.Document || _RootComponents.DefaultDocument;
            tasks = [];

            _loop = function _loop(i) {
              var route = routes[i]; // eslint-disable-next-line

              tasks.push(
              /*#__PURE__*/
              (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee() {
                return _regenerator.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return (0, _exportRoute.default)((0, _objectSpread2.default)({}, state, {
                          Comp: Comp,
                          DocumentTemplate: DocumentTemplate,
                          route: route
                        }));

                      case 2:
                        htmlProgress.tick();

                      case 3:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              })));
            };

            for (i = 0; i < routes.length; i++) {
              _loop(i);
            }

            _context2.next = 10;
            return (0, _utils.poolAll)(tasks, Number(config.outputFileRate));

          case 10:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdGF0aWMvZXhwb3J0Um91dGVzLnN5bmMuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInNldElnbm9yZVBhdGgiLCJzdGF0ZSIsImNvbmZpZyIsInJvdXRlcyIsImh0bWxQcm9ncmVzcyIsImxlbmd0aCIsInBhdGhzIiwiQVJUSUZBQ1RTIiwiQ29tcCIsInBhdGgiLCJyZXNvbHZlIiwiZGVmYXVsdCIsIkRvY3VtZW50VGVtcGxhdGUiLCJEb2N1bWVudCIsIkRlZmF1bHREb2N1bWVudCIsInRhc2tzIiwiaSIsInJvdXRlIiwicHVzaCIsInRpY2siLCJOdW1iZXIiLCJvdXRwdXRGaWxlUmF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBSUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBUkE7ZUFFMEJBLE9BQU8sQ0FBQyxvQkFBRCxDO0lBQXpCQyxhLFlBQUFBLGE7Ozs7Ozs7NEJBUU8sa0JBQU1DLEtBQU47QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNMQyxZQUFBQSxNQURLLEdBQ2NELEtBRGQsQ0FDTEMsTUFESyxFQUNHQyxNQURILEdBQ2NGLEtBRGQsQ0FDR0UsTUFESDtBQUdQQyxZQUFBQSxZQUhPLEdBR1EscUJBQVNELE1BQU0sQ0FBQ0UsTUFBaEIsQ0FIUixFQUliOztBQUVBTCxZQUFBQSxhQUFhLENBQUNFLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhQyxTQUFkLENBQWI7QUFFTUMsWUFBQUEsSUFSTyxHQVFBVCxPQUFPLENBQUNVLGNBQUtDLE9BQUwsQ0FBYVIsTUFBTSxDQUFDSSxLQUFQLENBQWFDLFNBQTFCLEVBQXFDLGVBQXJDLENBQUQsQ0FBUCxDQUNWSSxPQVRVLEVBVWI7O0FBQ01DLFlBQUFBLGdCQVhPLEdBV1lWLE1BQU0sQ0FBQ1csUUFBUCxJQUFtQkMsK0JBWC9CO0FBYVBDLFlBQUFBLEtBYk8sR0FhQyxFQWJEOztBQUFBLG1DQWNKQyxDQWRJO0FBZVgsa0JBQU1DLEtBQUssR0FBR2QsTUFBTSxDQUFDYSxDQUFELENBQXBCLENBZlcsQ0FnQlg7O0FBQ0FELGNBQUFBLEtBQUssQ0FBQ0csSUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUNILDBEQUNEakIsS0FEQztBQUVKTywwQkFBQUEsSUFBSSxFQUFKQSxJQUZJO0FBR0pJLDBCQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQUhJO0FBSUpLLDBCQUFBQSxLQUFLLEVBQUxBO0FBSkksMkJBREc7O0FBQUE7QUFPVGIsd0JBQUFBLFlBQVksQ0FBQ2UsSUFBYjs7QUFQUztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUFYO0FBakJXOztBQWNiLGlCQUFTSCxDQUFULEdBQWEsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHYixNQUFNLENBQUNFLE1BQTNCLEVBQW1DVyxDQUFDLEVBQXBDLEVBQXdDO0FBQUEsb0JBQS9CQSxDQUErQjtBQVl2Qzs7QUExQlk7QUFBQSxtQkEyQlAsb0JBQVFELEtBQVIsRUFBZUssTUFBTSxDQUFDbEIsTUFBTSxDQUFDbUIsY0FBUixDQUFyQixDQTNCTzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L2ZpcnN0LCBpbXBvcnQvbm8tZHluYW1pYy1yZXF1aXJlICovXG5cbmNvbnN0IHsgc2V0SWdub3JlUGF0aCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvYmluSGVscGVyJylcblxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcblxuaW1wb3J0IHsgRGVmYXVsdERvY3VtZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL1Jvb3RDb21wb25lbnRzJ1xuaW1wb3J0IHsgcG9vbEFsbCwgcHJvZ3Jlc3MgfSBmcm9tICcuLi91dGlscydcbmltcG9ydCBleHBvcnRSb3V0ZSBmcm9tICcuL2V4cG9ydFJvdXRlJ1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBzdGF0ZSA9PiB7XG4gIGNvbnN0IHsgY29uZmlnLCByb3V0ZXMgfSA9IHN0YXRlXG5cbiAgY29uc3QgaHRtbFByb2dyZXNzID0gcHJvZ3Jlc3Mocm91dGVzLmxlbmd0aClcbiAgLy8gVXNlIHRoZSBub2RlIHZlcnNpb24gb2YgdGhlIGFwcCBjcmVhdGVkIHdpdGggd2VicGFja1xuXG4gIHNldElnbm9yZVBhdGgoY29uZmlnLnBhdGhzLkFSVElGQUNUUylcblxuICBjb25zdCBDb21wID0gcmVxdWlyZShwYXRoLnJlc29sdmUoY29uZmlnLnBhdGhzLkFSVElGQUNUUywgJ3N0YXRpYy1hcHAuanMnKSlcbiAgICAuZGVmYXVsdFxuICAvLyBSZXRyaWV2ZSB0aGUgZG9jdW1lbnQgdGVtcGxhdGVcbiAgY29uc3QgRG9jdW1lbnRUZW1wbGF0ZSA9IGNvbmZpZy5Eb2N1bWVudCB8fCBEZWZhdWx0RG9jdW1lbnRcblxuICBjb25zdCB0YXNrcyA9IFtdXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcm91dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgcm91dGUgPSByb3V0ZXNbaV1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICB0YXNrcy5wdXNoKGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGV4cG9ydFJvdXRlKHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIENvbXAsXG4gICAgICAgIERvY3VtZW50VGVtcGxhdGUsXG4gICAgICAgIHJvdXRlLFxuICAgICAgfSlcbiAgICAgIGh0bWxQcm9ncmVzcy50aWNrKClcbiAgICB9KVxuICB9XG4gIGF3YWl0IHBvb2xBbGwodGFza3MsIE51bWJlcihjb25maWcub3V0cHV0RmlsZVJhdGUpKVxufVxuIl19