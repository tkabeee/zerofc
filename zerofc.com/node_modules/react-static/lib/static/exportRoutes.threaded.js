"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

/* eslint-disable import/first, import/no-dynamic-require */
var _require = require('../utils/binHelper'),
    setIgnorePath = _require.setIgnorePath;

var path = require('path');

var getConfig = require('./getConfig').default;

var _require2 = require('./components/RootComponents'),
    DefaultDocument = _require2.DefaultDocument;

var _require3 = require('../utils'),
    poolAll = _require3.poolAll;

var exportRoute = require('./exportRoute').default;

process.on('message',
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee3(state) {
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            return _context3.delegateYield(
            /*#__PURE__*/
            _regenerator.default.mark(function _callee2() {
              var _state, routes, Comp, DocumentTemplate, tasks, _loop, i;

              return _regenerator.default.wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      _state = state, routes = _state.routes; // Get config again

                      _context2.next = 3;
                      return getConfig(state);

                    case 3:
                      state = _context2.sent;
                      setIgnorePath(state.config.paths.ARTIFACTS); // Use the node version of the app created with webpack

                      Comp = require(path.resolve(state.config.paths.ARTIFACTS, 'static-app.js')).default; // Retrieve the document template

                      DocumentTemplate = state.config.Document || DefaultDocument;
                      tasks = [];

                      _loop = function _loop(i) {
                        var route = routes[i]; // eslint-disable-next-line

                        tasks.push(
                        /*#__PURE__*/
                        (0, _asyncToGenerator2.default)(
                        /*#__PURE__*/
                        _regenerator.default.mark(function _callee() {
                          return _regenerator.default.wrap(function _callee$(_context) {
                            while (1) {
                              switch (_context.prev = _context.next) {
                                case 0:
                                  _context.next = 2;
                                  return exportRoute((0, _objectSpread2.default)({}, state, {
                                    route: route,
                                    Comp: Comp,
                                    DocumentTemplate: DocumentTemplate
                                  }));

                                case 2:
                                  if (process.connected) {
                                    process.send({
                                      type: 'tick'
                                    });
                                  }

                                case 3:
                                case "end":
                                  return _context.stop();
                              }
                            }
                          }, _callee);
                        })));
                      };

                      for (i = 0; i < routes.length; i++) {
                        _loop(i);
                      }

                      _context2.next = 12;
                      return poolAll(tasks, Number(state.config.outputFileRate));

                    case 12:
                      if (process.connected) {
                        process.send({
                          type: 'done'
                        });
                      }

                      process.exit();

                    case 14:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2);
            })(), "t0", 2);

          case 2:
            _context3.next = 9;
            break;

          case 4:
            _context3.prev = 4;
            _context3.t1 = _context3["catch"](0);
            console.error(_context3.t1);

            if (process.connected) {
              process.send({
                type: 'error',
                payload: _context3.t1
              });
            }

            process.exit(1);

          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[0, 4]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdGF0aWMvZXhwb3J0Um91dGVzLnRocmVhZGVkLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJzZXRJZ25vcmVQYXRoIiwicGF0aCIsImdldENvbmZpZyIsImRlZmF1bHQiLCJEZWZhdWx0RG9jdW1lbnQiLCJwb29sQWxsIiwiZXhwb3J0Um91dGUiLCJwcm9jZXNzIiwib24iLCJzdGF0ZSIsInJvdXRlcyIsImNvbmZpZyIsInBhdGhzIiwiQVJUSUZBQ1RTIiwiQ29tcCIsInJlc29sdmUiLCJEb2N1bWVudFRlbXBsYXRlIiwiRG9jdW1lbnQiLCJ0YXNrcyIsImkiLCJyb3V0ZSIsInB1c2giLCJjb25uZWN0ZWQiLCJzZW5kIiwidHlwZSIsImxlbmd0aCIsIk51bWJlciIsIm91dHB1dEZpbGVSYXRlIiwiZXhpdCIsImNvbnNvbGUiLCJlcnJvciIsInBheWxvYWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtlQUUwQkEsT0FBTyxDQUFDLG9CQUFELEM7SUFBekJDLGEsWUFBQUEsYTs7QUFDUixJQUFNQyxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBUCxDQUF1QkksT0FBekM7O2dCQUM0QkosT0FBTyxDQUFDLDZCQUFELEM7SUFBM0JLLGUsYUFBQUEsZTs7Z0JBQ1lMLE9BQU8sQ0FBQyxVQUFELEM7SUFBbkJNLE8sYUFBQUEsTzs7QUFDUixJQUFNQyxXQUFXLEdBQUdQLE9BQU8sQ0FBQyxlQUFELENBQVAsQ0FBeUJJLE9BQTdDOztBQUVBSSxPQUFPLENBQUNDLEVBQVIsQ0FBVyxTQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0QkFBc0Isa0JBQU1DLEtBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFFQ0EsS0FGRCxFQUVWQyxNQUZVLFVBRVZBLE1BRlUsRUFHbEI7O0FBSGtCO0FBQUEsNkJBS0pSLFNBQVMsQ0FBQ08sS0FBRCxDQUxMOztBQUFBO0FBS2xCQSxzQkFBQUEsS0FMa0I7QUFPbEJULHNCQUFBQSxhQUFhLENBQUNTLEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxLQUFiLENBQW1CQyxTQUFwQixDQUFiLENBUGtCLENBU2xCOztBQUNNQyxzQkFBQUEsSUFWWSxHQVVMZixPQUFPLENBQUNFLElBQUksQ0FBQ2MsT0FBTCxDQUNuQk4sS0FBSyxDQUFDRSxNQUFOLENBQWFDLEtBQWIsQ0FBbUJDLFNBREEsRUFFbkIsZUFGbUIsQ0FBRCxDQUFQLENBR1ZWLE9BYmUsRUFjbEI7O0FBQ01hLHNCQUFBQSxnQkFmWSxHQWVPUCxLQUFLLENBQUNFLE1BQU4sQ0FBYU0sUUFBYixJQUF5QmIsZUFmaEM7QUFpQlpjLHNCQUFBQSxLQWpCWSxHQWlCSixFQWpCSTs7QUFBQSw2Q0FrQlRDLENBbEJTO0FBbUJoQiw0QkFBTUMsS0FBSyxHQUFHVixNQUFNLENBQUNTLENBQUQsQ0FBcEIsQ0FuQmdCLENBb0JoQjs7QUFDQUQsd0JBQUFBLEtBQUssQ0FBQ0csSUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBLGtEQUFXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlDQUNIZixXQUFXLGlDQUNaRyxLQURZO0FBRWZXLG9DQUFBQSxLQUFLLEVBQUxBLEtBRmU7QUFHZk4sb0NBQUFBLElBQUksRUFBSkEsSUFIZTtBQUlmRSxvQ0FBQUEsZ0JBQWdCLEVBQWhCQTtBQUplLHFDQURSOztBQUFBO0FBT1Qsc0NBQUlULE9BQU8sQ0FBQ2UsU0FBWixFQUF1QjtBQUNyQmYsb0NBQUFBLE9BQU8sQ0FBQ2dCLElBQVIsQ0FBYTtBQUFFQyxzQ0FBQUEsSUFBSSxFQUFFO0FBQVIscUNBQWI7QUFDRDs7QUFUUTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx5QkFBWDtBQXJCZ0I7O0FBa0JsQiwyQkFBU0wsQ0FBVCxHQUFhLENBQWIsRUFBZ0JBLENBQUMsR0FBR1QsTUFBTSxDQUFDZSxNQUEzQixFQUFtQ04sQ0FBQyxFQUFwQyxFQUF3QztBQUFBLDhCQUEvQkEsQ0FBK0I7QUFjdkM7O0FBaENpQjtBQUFBLDZCQWlDWmQsT0FBTyxDQUFDYSxLQUFELEVBQVFRLE1BQU0sQ0FBQ2pCLEtBQUssQ0FBQ0UsTUFBTixDQUFhZ0IsY0FBZCxDQUFkLENBakNLOztBQUFBO0FBa0NsQiwwQkFBSXBCLE9BQU8sQ0FBQ2UsU0FBWixFQUF1QjtBQUNyQmYsd0JBQUFBLE9BQU8sQ0FBQ2dCLElBQVIsQ0FBYTtBQUFFQywwQkFBQUEsSUFBSSxFQUFFO0FBQVIseUJBQWI7QUFDRDs7QUFDRGpCLHNCQUFBQSxPQUFPLENBQUNxQixJQUFSOztBQXJDa0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXVDbEJDLFlBQUFBLE9BQU8sQ0FBQ0MsS0FBUjs7QUFDQSxnQkFBSXZCLE9BQU8sQ0FBQ2UsU0FBWixFQUF1QjtBQUNyQmYsY0FBQUEsT0FBTyxDQUFDZ0IsSUFBUixDQUFhO0FBQUVDLGdCQUFBQSxJQUFJLEVBQUUsT0FBUjtBQUFpQk8sZ0JBQUFBLE9BQU87QUFBeEIsZUFBYjtBQUNEOztBQUNEeEIsWUFBQUEsT0FBTyxDQUFDcUIsSUFBUixDQUFhLENBQWI7O0FBM0NrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF0Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9maXJzdCwgaW1wb3J0L25vLWR5bmFtaWMtcmVxdWlyZSAqL1xuXG5jb25zdCB7IHNldElnbm9yZVBhdGggfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2JpbkhlbHBlcicpXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBnZXRDb25maWcgPSByZXF1aXJlKCcuL2dldENvbmZpZycpLmRlZmF1bHRcbmNvbnN0IHsgRGVmYXVsdERvY3VtZW50IH0gPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvUm9vdENvbXBvbmVudHMnKVxuY29uc3QgeyBwb29sQWxsIH0gPSByZXF1aXJlKCcuLi91dGlscycpXG5jb25zdCBleHBvcnRSb3V0ZSA9IHJlcXVpcmUoJy4vZXhwb3J0Um91dGUnKS5kZWZhdWx0XG5cbnByb2Nlc3Mub24oJ21lc3NhZ2UnLCBhc3luYyBzdGF0ZSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyByb3V0ZXMgfSA9IHN0YXRlXG4gICAgLy8gR2V0IGNvbmZpZyBhZ2FpblxuXG4gICAgc3RhdGUgPSBhd2FpdCBnZXRDb25maWcoc3RhdGUpXG5cbiAgICBzZXRJZ25vcmVQYXRoKHN0YXRlLmNvbmZpZy5wYXRocy5BUlRJRkFDVFMpXG5cbiAgICAvLyBVc2UgdGhlIG5vZGUgdmVyc2lvbiBvZiB0aGUgYXBwIGNyZWF0ZWQgd2l0aCB3ZWJwYWNrXG4gICAgY29uc3QgQ29tcCA9IHJlcXVpcmUocGF0aC5yZXNvbHZlKFxuICAgICAgc3RhdGUuY29uZmlnLnBhdGhzLkFSVElGQUNUUyxcbiAgICAgICdzdGF0aWMtYXBwLmpzJ1xuICAgICkpLmRlZmF1bHRcbiAgICAvLyBSZXRyaWV2ZSB0aGUgZG9jdW1lbnQgdGVtcGxhdGVcbiAgICBjb25zdCBEb2N1bWVudFRlbXBsYXRlID0gc3RhdGUuY29uZmlnLkRvY3VtZW50IHx8IERlZmF1bHREb2N1bWVudFxuXG4gICAgY29uc3QgdGFza3MgPSBbXVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcm91dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCByb3V0ZSA9IHJvdXRlc1tpXVxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICB0YXNrcy5wdXNoKGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgZXhwb3J0Um91dGUoe1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHJvdXRlLFxuICAgICAgICAgIENvbXAsXG4gICAgICAgICAgRG9jdW1lbnRUZW1wbGF0ZSxcbiAgICAgICAgfSlcbiAgICAgICAgaWYgKHByb2Nlc3MuY29ubmVjdGVkKSB7XG4gICAgICAgICAgcHJvY2Vzcy5zZW5kKHsgdHlwZTogJ3RpY2snIH0pXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICAgIGF3YWl0IHBvb2xBbGwodGFza3MsIE51bWJlcihzdGF0ZS5jb25maWcub3V0cHV0RmlsZVJhdGUpKVxuICAgIGlmIChwcm9jZXNzLmNvbm5lY3RlZCkge1xuICAgICAgcHJvY2Vzcy5zZW5kKHsgdHlwZTogJ2RvbmUnIH0pXG4gICAgfVxuICAgIHByb2Nlc3MuZXhpdCgpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgIGlmIChwcm9jZXNzLmNvbm5lY3RlZCkge1xuICAgICAgcHJvY2Vzcy5zZW5kKHsgdHlwZTogJ2Vycm9yJywgcGF5bG9hZDogZXJyIH0pXG4gICAgfVxuICAgIHByb2Nlc3MuZXhpdCgxKVxuICB9XG59KVxuIl19